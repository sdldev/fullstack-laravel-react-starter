# Build and runtime for Laravel + React with FrankenPHP (Caddy-based)

# 1) Frontend build (Vite)
FROM node:20-alpine AS frontend
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .
# Adjust if your build script differs
RUN npm run build

# 2) Composer deps
FROM composer:2 AS vendor
WORKDIR /app
COPY composer.json composer.lock ./
RUN composer install --no-dev --no-interaction --no-progress --prefer-dist

# 3) Runtime: FrankenPHP + PHP 8.3
FROM dunglas/frankenphp:1.2-php8.3-alpine AS runtime

# System deps for Laravel common extensions
RUN apk add --no-cache icu-dev libzip-dev oniguruma-dev \
    postgresql-dev mariadb-connector-c-dev \
    libpng-dev libjpeg-turbo-dev freetype-dev git bash curl

# PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
 && docker-php-ext-install intl pdo pdo_mysql pdo_pgsql zip gd bcmath opcache

# Opcache tuning (production)
RUN { \
  echo "opcache.enable=1"; \
  echo "opcache.enable_cli=1"; \
  echo "opcache.validate_timestamps=0"; \
  echo "opcache.max_accelerated_files=20000"; \
  echo "opcache.memory_consumption=256"; \
  echo "opcache.interned_strings_buffer=16"; \
} > /usr/local/etc/php/conf.d/opcache.ini

WORKDIR /app

# Copy application code
COPY . .

# Copy Composer vendor
COPY --from=vendor /app/vendor ./vendor

# Copy built frontend assets to public/build (adjust to your output dir if needed)
COPY --from=frontend /app/public/build ./public/build

# Cache config/routes/views for production
RUN php artisan config:cache \
 && php artisan route:cache \
 && php artisan view:cache \
 && php artisan event:cache

# Minimal health endpoint
RUN printf "<?php echo 'ok';" > public/healthz

# Caddy/FrankenPHP config
COPY ./docker/frankenphp/Caddyfile /etc/caddy/Caddyfile

# Permissions
RUN chown -R www-data:www-data storage bootstrap/cache \
 && find storage -type d -exec chmod 775 {} \; \
 && find storage -type f -exec chmod 664 {} \; \
 && chmod -R 775 bootstrap/cache

USER www-data

# Listen on private port 10080 in the container (mapped by compose)
EXPOSE 10080

CMD [ "frankenphp", "run", "--config", "/etc/caddy/Caddyfile", "--adapter", "caddyfile" ]
