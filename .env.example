APP_NAME=Laravel
APP_ENV=local
APP_KEY=
APP_DEBUG=false  # SECURITY: false by default, only set true for local debugging
APP_URL=http://localhost

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=error  # SECURITY: error by default, use debug only in local development

DB_CONNECTION=sqlite
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=laravel
# DB_USERNAME=root
# DB_PASSWORD=

# Session Security Settings
# IMPORTANT: These are secure defaults for production
SESSION_DRIVER=database
SESSION_LIFETIME=30  # SECURITY: 30 minutes instead of 120
SESSION_ENCRYPT=true  # SECURITY: Encrypt session data
SESSION_PATH=/
SESSION_DOMAIN=null
SESSION_EXPIRE_ON_CLOSE=true  # SECURITY: Sessions expire when browser closes
SESSION_SECURE_COOKIE=false  # SECURITY: Set to true in production with HTTPS

# Authentication Security
AUTH_PASSWORD_TIMEOUT=900  # SECURITY: Password confirmation expires after 15 minutes (900 seconds)

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
# CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"

# Seeder Security Settings
# REQUIRED: Set a strong admin password for database seeding
# Generate one with: php artisan tinker --execute="echo Str::random(24);"
# Or use: openssl rand -base64 24
ADMIN_DEFAULT_PASSWORD=

# Production Deployment Checklist:
# When deploying to production, ensure these are set:
# - APP_ENV=production
# - APP_DEBUG=false (already set above)
# - APP_URL=https://yourdomain.com
# - SESSION_SECURE_COOKIE=true
# - ADMIN_DEFAULT_PASSWORD=<strong-unique-password>
# - LOG_LEVEL=error
# Run security audit: composer audit && npm audit

# ============================================================================
# Docker Deployment Configuration
# ============================================================================
# These settings are used when deploying with Docker and docker-compose
# See: docs/operations/DOCKER_DEPLOYMENT.md for detailed documentation

# Docker Application Ports (external access)
# APP_PORT=8000
# APP_PORT_HTTPS=8443

# FrankenPHP Worker Configuration
# Number of worker processes (default: 4)
# More workers = more concurrent requests but more memory usage
# Recommended: 2-4 workers per CPU core
# FRANKENPHP_WORKERS=4

# Auto Migration and Seeding (Docker only)
# DANGER: Only enable for initial deployment!
# Set to false after first deployment to prevent accidental data loss
# AUTO_MIGRATE=false
# AUTO_SEED=false

# MinIO (S3-compatible storage) Configuration
# Used for file uploads and media storage in Docker deployment
# MINIO_ACCESS_KEY=minioadmin
# MINIO_SECRET_KEY=changeme_secure_minio_password
# MINIO_BUCKET=laravel
# MINIO_PORT=9000
# MINIO_CONSOLE_PORT=9001

# When using MinIO in Docker (internal network):
# FILESYSTEM_DISK=s3
# AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
# AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
# AWS_DEFAULT_REGION=us-east-1
# AWS_BUCKET=${MINIO_BUCKET}
# AWS_ENDPOINT=http://minio:9000
# AWS_USE_PATH_STYLE_ENDPOINT=true

# Docker MySQL Root Password
# Separate from DB_PASSWORD for administrative access
# MYSQL_ROOT_PASSWORD=changeme_secure_root_password

# Docker Redis Password
# REDIS_PASSWORD=changeme_secure_redis_password

# Docker Deployment Notes:
# 1. Copy .env.docker to .env for Docker deployment
# 2. Generate strong passwords for all services
# 3. Update APP_KEY: docker run --rm dunglas/frankenphp:1-php8.3-alpine php -r "echo 'base64:'.base64_encode(random_bytes(32)).PHP_EOL;"
# 4. See docker-compose.yml for all available services
# 5. Read docs/operations/DOCKER_DEPLOYMENT.md before deploying
