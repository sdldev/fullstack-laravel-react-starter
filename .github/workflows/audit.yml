name: security-audit

on:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: security-audit-${{ github.ref }}
  cancel-in-progress: true

jobs:
  vulnerability-scan:
    name: Vulnerability Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer:v2
          coverage: none
          cache: composer

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          npm ci

      - name: Run Composer Security Audit
        run: |
          echo "### 🔍 Composer Security Audit" >> $GITHUB_STEP_SUMMARY
          composer audit --format=plain || echo "::warning::Composer audit found vulnerabilities"
          composer audit --format=json > composer-audit.json || true

      - name: Run NPM Security Audit
        run: |
          echo "### 🔍 NPM Security Audit" >> $GITHUB_STEP_SUMMARY
          npm audit --audit-level=moderate || echo "::warning::NPM audit found vulnerabilities"
          npm audit --json > npm-audit.json || true

      - name: Upload Audit Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-results
          path: |
            composer-audit.json
            npm-audit.json
          retention-days: 30

  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    needs: vulnerability-scan
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer:v2
          cache: composer

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          npm ci

      - name: Run Pint
        run: vendor/bin/pint

      - name: Format Frontend
        run: npm run format

      - name: Lint Frontend
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer:v2
          coverage: xdebug
          cache: composer

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Set Environment for CI
        run: |
          echo "APP_ENV=testing" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=database/database.sqlite" >> .env
          echo "CACHE_DRIVER=array" >> .env
          echo "SESSION_DRIVER=array" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Setup Database
        run: php artisan migrate --force

      - name: Build Assets
        run: npm run build

      - name: Run tests
        run: ./vendor/bin/pest

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer:v2
          cache: composer

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Set Environment for CI
        run: |
          echo "APP_ENV=testing" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=database/database.sqlite" >> .env
          echo "CACHE_DRIVER=array" >> .env
          echo "SESSION_DRIVER=array" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Setup Database
        run: php artisan migrate --force

      - name: Run Security Tests
        run: |
          echo "### 🔒 Security Test Results" >> $GITHUB_STEP_SUMMARY
          ./vendor/bin/pest --filter=SecurityTest

      - name: Generate Security Report
        if: always()
        run: |
          echo "# 🔒 Security Audit Report" > security-report.md
          echo "" >> security-report.md
          echo "**Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> security-report.md
          echo "**Branch**: ${{ github.ref_name }}" >> security-report.md
          echo "**Commit**: ${{ github.sha }}" >> security-report.md
          echo "" >> security-report.md
          echo "## Vulnerability Scanning" >> security-report.md
          echo "See artifacts for detailed vulnerability reports" >> security-report.md
          echo "" >> security-report.md
          echo "## Security Tests" >> security-report.md
          echo "Security test suite completed. Check workflow logs for details." >> security-report.md
          echo "" >> security-report.md
          echo "## Status" >> security-report.md
          echo "- ✅ Vulnerability scan completed" >> security-report.md
          echo "- ✅ Code quality checks passed" >> security-report.md
          echo "- ✅ Test suite passed" >> security-report.md
          echo "- ✅ Security tests executed" >> security-report.md

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report
          path: security-report.md
          retention-days: 90